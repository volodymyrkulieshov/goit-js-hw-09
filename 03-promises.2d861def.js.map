{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAOA,MAAMC,EAAOC,SAASC,cAAc,SAgCpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCbL,EAAKa,iBAAiB,UAEtB,SAA2BC,GAEzBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOjB,EAAKK,MAAMa,OAC9B,MAAMC,EAAOF,OAAOjB,EAAKmB,KAAKD,OACxBE,EAASH,OAAOjB,EAAKoB,OAAOF,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAEhClB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAAzB,GAAS0B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAGnDW,GAASG,EAEXnB,EAAK4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const selectors = {\n//   form: document.querySelector('.form'),\n//   submitBtn: document.querySelector('[type = \"submit\"]'),\n// };\n\nconst form = document.querySelector('.form');\n// const submitBtn = document.querySelector('[type =\"submit\"]');\n\nform.addEventListener('submit', handlerSubmitform);\n\nfunction handlerSubmitform(evt) {\n  // console.log(evt);\n  evt.preventDefault();\n\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    // console.log(i);\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  form.reset();\n  // submitBtn.disabled = true;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.2d861def.js.map"}